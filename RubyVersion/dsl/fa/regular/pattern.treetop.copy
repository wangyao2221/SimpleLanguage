优先级低的做为最上层的模式，因为最上层的模式是要让它下一层的模式解析完传递过来之后才进行解析的，也就是下一层优先级高的先执行，
choose要可能匹配到空是因为他被brackets引用了，brackets是最后的匹配，所以要让它可能为空
grammar Pattern
    rule choose
        first:concatenate '|' second:choose {
            def to_ast
                Choose.new(first.to_ast, second.to_ast)
            end
        }
        /
        concatenate
    end

    rule concatenate
        first:repeat second:concatenate {
            def to_ast
                Concatenate.new(first.to_ast, second.to_ast)
            end
        }
        /
        repeat
    end

    rule repeat
        brackets '*' {
            def to_ast
                Repeat.new(brackets.to_ast)
            end
        }
        /
        brackets
    end

    rule brackets
        '(' choose ')' {
            def to_ast
                choose.to_ast
            end
        }
        /
        literal => 也可以放在choose上吧？ concatenate_or_empty_or_literal
    end

    rule empty
        '' {
            def to_ast
                Empty.new
            end
        }
    end

    rule literal
        [a-z] {
            def to_ast
                Literal.new(text_value)
            end
        }
    end
end